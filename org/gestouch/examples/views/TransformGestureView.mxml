<?xml version="1.0" encoding="utf-8"?>
<views:ExampleViewBase xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:views="org.gestouch.examples.views.*"
	xmlns:controls="org.gestouch.examples.controls.*"
	xmlns:containers="org.gestouch.examples.containers.*"
	creationComplete="centerImage()"
	resize="centerImage()"
	>
	
	<fx:Script>
		<![CDATA[
			import org.gestouch.events.GestureEvent;
			import org.gestouch.gestures.TransformGesture;
			
			
			private var transformGesture:TransformGesture;
			
			
			override protected function onViewActivate():void
			{
				super.onViewActivate();
				
				transformGesture = new TransformGesture(image);
				transformGesture.addEventListener(org.gestouch.events.GestureEvent.GESTURE_BEGAN, onGesture);
				transformGesture.addEventListener(org.gestouch.events.GestureEvent.GESTURE_CHANGED, onGesture);
			}
			
			
			override protected function onViewDeactivate():void
			{
				super.onViewDeactivate();
				
				if (transformGesture)
				{
					transformGesture.dispose();
					transformGesture = null;
				}
			}
			
			
			private function onGesture(event:org.gestouch.events.GestureEvent):void
			{
				const gesture:TransformGesture = event.target as TransformGesture;
				var matrix:Matrix = image.transform.matrix;
				
				// Panning
				matrix.translate(gesture.offsetX, gesture.offsetY);
				image.transform.matrix = matrix;
				
				if (gesture.scale != 1 || gesture.rotation != 0)
				{
					// Scale and rotation.
					var transformPoint:Point = matrix.transformPoint(image.globalToLocal(gesture.location));
					matrix.translate(-transformPoint.x, -transformPoint.y);
					matrix.rotate(gesture.rotation);
					matrix.scale(gesture.scale, gesture.scale);
					matrix.translate(transformPoint.x, transformPoint.y);
					
					image.transform.matrix = matrix;
				}
			}
			
			
			private function centerImage():void
			{
				image.transform.matrix = new Matrix();
				image.x = (width - image.width) >> 1;
				image.y = (width - image.height) >> 1;
			}
		]]>
	</fx:Script>
	
	<s:Image id="image"
		source="@Embed(source='/../build/assets/images/placekitten-480-640.jpg')"
		/>
	
</views:ExampleViewBase>